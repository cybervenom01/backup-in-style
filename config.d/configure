#!/bin/bash

###
## Error Handler
#

trap 'err_handle $? $LINENO' ERR

err_handle ()
{
	E_STAT=$1
        LINE_NO=$2
        E_MSG="$( date +%c ): $( uname -n ): ERROR: [$E_STAT] occurred on line $LINE_NO\n"

        printf "%b" "$E_MSG"
        exit $E_STAT
}


###
## Main Configuration File.
###

###
## Variables Configuration
#

ROOT_UID=0
E_UID=1


###
## Check if the configuration file is run as root.
#

if [ "$UID" -ne "$ROOT_UID" ]
then
	printf "\n\n"
	printf "Please run this script with root privileges.\n\n"
	exit $E_UID
fi


###
## Searches for the commands which help to compress, archive, and remotely transfer your data.
#

printf "\nChecking if commands are installed: \n"

A_CMDS=( "tar" "zstd" "ssh" "scp" )

for CMDS in "${A_CMDS[@]}";
do
	printf "$CMDS . . .\n"

        if ! command -v "$CMDS" > /dev/null 2>&1;
        then
                printf "$CMDS not found\n"
                printf "Please install the corresponding packages.\n\n"
                exit 0
        fi
done

printf "Commands are installed.\n"


###
## Copy main script into /usr/local/bin
## Make sure it has the correct file permissions
## and its executable.
#

printf "Copying the script to /usr/local/bin.\n"
cp ../backup-in-style.sh /usr/local/bin/backupstyle

printf "Renaming and changing permissions for script.\n"
chmod 755 /usr/local/bin/backupstyle


###
## Copy the ASCII Art into the /usr/share/backupstyle directory
#

BKDIR="backupstyle"
ASCIIDIR="asciiart"

if [ ! -d /usr/share/$BKDIR/$ASCIIDIR ]
then
	printf "Creating bakupstyle directory.\n"
	mkdir -p /usr/share/$BKDIR/$ASCIIDIR

	printf "Changing directory permissions.\n"
	chmod 755 /usr/share/$BKDIR
	chmod 755 /usr/share/$BKDIR/$ASCIIDIR

	printf "Copying ascii art files to the directory.\n"
	cp ../ascii/* /usr/share/$BKDIR/$ASCIIDIR

	printf "Changing permissions to the ascii art files.\n"
	chmod 644 /usr/share/$BKDIR/$ASCIIDIR/*
else
	printf "Directories exists.\n\n"
fi


###
## Create directory named backupstyle.d in /var/log
##TODO: Instead of the variable $HOME use something else that can help
##	create the directory in a regular user's home directory. Since
##	this script is being run as root it will create the directory
##	in the root user's home directory.

BKLOGDIR=".backupstyle.d"
BKLOGFILE="backup.log"

if [ ! -d ${HOME}/${BKLOGDIR} ]
then
	printf "Creating ${BKLOGDIR} directory: \n"
	mkdir ${HOME}/${BKLOGDIR}

	printf "Changing directory permissions for ${BKLOGDIR}.\n"
	chmod 755 ${HOME}/${BKLOGDIR}
else
	printf "Directory ${BKLOGDIR} exist.\n\n"
fi

if [ ! -a ${HOME}/${BKLOGDIR}/$BKLOGFILE ]
then
	printf "Creating $BKLOGFILE log file.\n"
	touch ${HOME}/${BKLOGDIR}/$BKLOGFILE

	printf "Changing file permissions for $BKLOGFILE.\n"
	chmod 644 ${HOME}/${BKLOGDIR}/$BKLOGFILE
else
	printf "Log file $BKLOGFILE exist.\n\n"
fi


###
## Display message.
#

printf "\nYour backup script is ready.\n"
printf "Keep your data safe and secure.\n\n"

exit 0
